---
layout: post
date:   2015-03-08 22:21:49
title:   android studio 混淆配置
categories: Android
tags: Android android studio 混淆配置
---

标签（空格分隔）： Android

---

通常我们需要在proguard文件中配置哪些不需要混淆，除了一些基本的配置（sdk下的proguard文件已给出，主要是避免混淆：组件，native方法，View的子类，枚举和继承自parceble的类），我们自己还要避免混淆引用的第三方库（如果库中的说明文档有提醒如何混淆），可以参考下面两篇文章：

[Android混淆注意事项][1]
[极客学院混淆与反编译][2]

<font color="red">注意：javaBean最好也避免混淆哦，不然可能会出现一些莫名其妙的运行错误</font>

**Android Studio：**

只需在 build.gradle(Module:app)中的 buildTypes 中的minifyEnabled置为true即能开启混淆：
{% highlight java %}
buildTypes {
        release {
            debuggable true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
{% endhighlight %}

一般在moudle的根目录下会有proguard-rules.pro文件，没有的话可以在sdk/tools/proguard/目录下降proguard-android.txt拷入：

<img src="https://cloud.githubusercontent.com/assets/13905072/13066045/6ca7ff88-d49d-11e5-8182-1a3e00cbfd4c.jpg" style="width:50% "/>
<!-- ![此处输入图片的描述][3] -->


最后在proguard优化过后会产生一些文件
mapping.txt – 列出了原始的类，方法和字段名与混淆后代码间的映射。这个文件很重要，当你从release版本中收到一个bug报告时，可以用它来翻译被混淆的代码。
seeds.txt – 列出了未被混淆的类和成员
unusage.txt – 列出了从.apk中删除的代码


接下来就是编辑配置文件了：
可以直接将sdk下的proguard-android文件的内容拷入，这些就是一般的配置了。
之后需要配置第三方库和javabean：

{% highlight java %}
    #避免混淆泛型 如果混淆报错建议关掉
    #–keepattributes Signature

    #如果用用到Gson解析包的，直接添加下面这几行就能成功混淆，不然会报错。
    #gson
    #-libraryjars libs/gson-2.2.2.jar
    -keepattributes Signature
    # Gson specific classes
    -keep class sun.misc.Unsafe { *; }
    # Application classes that will be serialized/deserialized over Gson
    -keep class com.google.gson.examples.android.model.** { *; }

    ################百度地图不混淆##################  
    -keep class com.baidu.** {*;}
    -keep class vi.com.** {*;}
    -dontwarn com.baidu.**

    ################eventBus################## 
    -keep class org.simple.** { *; }
    -keep interface org.simple.** { *; }
    -keepclassmembers class * {
        @org.simple.eventbus.Subscriber <methods>;
    }


    ################xutils##################
    -keep class com.lidroid.xutils.** { *; }
    -keep public class * extends com.lidroid.xutils.**
    -keepattributes Signature
    -keepattributes *Annotation*
    -keep public interface com.lidroid.xutils.** {*;}
    -dontwarn com.lidroid.xutils.**
    -keepclasseswithmembers class com.jph.android.entity.** {
        <fields>;
        <methods>;
    }

    ################微信支付，分享，授权登录##################
    -keep class com.tencent.mm.sdk.** {
       *;
    }
    
    #混淆打包时报了apache的错误，添加以下就没事了
    -keep class org.apache.http.** { *; }
    -dontwarn org.apache.http.**
    -dontwarn android.net.**
    
    ################javabean##################
    -keep class cc.talkpal.talkpal.bean.** { *; }

{% endhighlight %}

看一下常用的配置语法：

-keep class com.badlogic.gdx.backends.android.**{ *;}
像这样的只是不混淆：这个包下的类(不包括子包里的东西),用到一个第三文的类就要把这个类所在的包，像上面加上

-libraryjars /libs/android-support-v4.jar
这里处理第三方的jar包,第三方JAR包处理开始

-dontwarn com.badlogic.**
这里不对第三方的jar包的提出WARN    

-keep public class * extends android.app.Fragment 
保留继承自fragment的类

**遇到的问题**

在使用友盟的自动更新的时候，使用gradle的多渠道签名混淆打包不成功，报了这样一个错误：
<font color="red">Notification.setLatestEventInfo()</font>

通过忽略掉warn让混淆通过
{% highlight java %}
-dontwarn com.umeng.update.c$a
-dontwarn com.umeng.update.net.DownloadingService$1
-dontwarn com.umeng.update.net.DownloadingService$b
-dontwarn com.umeng.update.net.c$c
{% endhighlight %}

使用友盟自动更新混淆出现问题可以查看这个：

[自动更新混淆后无法使用怎么办？][4]


  [1]: http://blog.csdn.net/marshalchen/article/details/9928801
  [2]: http://wiki.jikexueyuan.com/project/android-actual-combat-skills/confusion-and-anticompilation.html
  [3]: https://cloud.githubusercontent.com/assets/13905072/13066045/6ca7ff88-d49d-11e5-8182-1a3e00cbfd4c.jpg
  [4]: http://bbs.umeng.com/thread-22-1-3.html